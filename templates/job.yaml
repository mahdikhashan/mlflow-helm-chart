{{- if and (or .Values.backendStore.postgres.enabled .Values.backendStore.mysql.enabled) .Values.backendStore.databaseMigration }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "mlflow.fullname" . }}
  labels:
    {{- include "mlflow.labels" . | nindent 4 }}
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": hook-succeeded,hook-failed
spec:
  backoffLimit: 0
  activeDeadlineSeconds: 900
  ttlSecondsAfterFinished: 100
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "mlflow.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.backendStore.databaseConnectionCheck }}
      initContainers:
        - name: dbchecker
          image: "busybox:1.32"
          imagePullPolicy: IfNotPresent
          command: [ "/script/dbchecker.sh" ]
          envFrom:
            - configMapRef:
                name: {{ template "mlflow.fullname" . }}-env-configmap
          volumeMounts:
            - name: dbchecker
              mountPath: /script/dbchecker.sh
              subPath: dbchecker.sh
      {{- end }}
      containers:
        - name: mlflow-db-migration-job
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          envFrom:
            - configMapRef:
                name: {{ template "mlflow.fullname" . }}-env-configmap
            - secretRef:
                name: {{ template "mlflow.fullname" . }}-env-secret
          command: ["python"]
          args:
            - /opt/mlflow/migrations.py
          volumeMounts:
            - name: migrations-config
              mountPath: /opt/mlflow/migrations.py
              subPath: migrations.py
              readOnly: true
      volumes:
        - name: migrations-config
          configMap:
            name: {{ template "mlflow.fullname" . }}-migrations
        {{- if .Values.backendStore.databaseConnectionCheck }}
        - name: dbchecker
          configMap:
            name: {{ template "mlflow.fullname" . }}-dbchecker
            defaultMode: 0777
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      restartPolicy: Never
{{- end }}